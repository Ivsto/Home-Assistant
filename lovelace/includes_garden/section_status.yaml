
#===========
#=== STATUS
#===========
type: custom:stack-in-card
cards:

  #===========================
  #=== CURRENT STATUS HEADING
  #===========================
  - type: entities
    entities:
      - type: divider
    style: >
      ha-card {
        background: none;
        margin-bottom: -0.8em;
      }

  - type: custom:mod-card
    style: |
      ha-card {
        margin: 0em 1em 0em 1em;
      }
    card:
      type: horizontal-stack
      cards:

        #=== NEXT RUN DETAILS
        - type: custom:button-card
          entity: input_text.irrigation_current_status
          name: >
            [[[
              if (states['input_boolean.irrigation_master_control_switch'].state == 'off')
                return 'SYSTEM IS OFF';
              else
                var time_now = states['sensor.time'].state;
                var cycle1_sched = states['input_boolean.irrigation_cycle1_schedule_enabled'].state;
                var cycle2_sched = states['input_boolean.irrigation_cycle2_schedule_enabled'].state;
                var cycle1_time = states['input_datetime.irrigation_cycle1_start_time'].state.substr(0, 5);
                var cycle2_time = states['input_datetime.irrigation_cycle2_start_time'].state.substr(0, 5);
                var cycle1_name = states['input_text.irrigation_cycle1_name'].state;
                var cycle2_name = states['input_text.irrigation_cycle2_name'].state;

                var cycle1_running = states['input_boolean.irrigation_cycle1_running'].state;
                var cycle2_running = states['input_boolean.irrigation_cycle2_running'].state;
                var cycle3_running = states['input_boolean.irrigation_cycle3_running'].state;

                if (cycle1_running == 'on')
                  return cycle1_name;
                else if (cycle2_running == 'on')
                  return cycle2_name;
                else if (cycle3_running == 'on')
                  return cycle3_name;
                else if (cycle1_sched == 'on' && cycle1_time > time_now)
                    return cycle1_name + ' at ' + cycle1_time;
                else if (cycle2_sched == 'on' && cycle2_time > time_now)
                    return cycle2_name + ' at ' + cycle2_time;
                else if (cycle1_sched == 'on' && cycle1_time < time_now)
                    return 'Tomorrow at ' + cycle1_time;
                else if (cycle2_sched == 'on' && cycle2_time < time_now)
                    return 'Tomorrow at ' + cycle2_time;
                else return 'NOTHING SCHEDULED';
            ]]]
          label: >
            [[[
              var cycle1_running = states['input_boolean.irrigation_cycle1_running'].state;
              var cycle2_running = states['input_boolean.irrigation_cycle2_running'].state;
              var cycle3_running = states['input_boolean.irrigation_cycle3_running'].state;

              if (cycle1_running == 'on')
                return 'RUNNING: ';
              else if (cycle2_running == 'on')
                return 'RUNNING: ';
              else if (cycle3_running == 'on')
                return 'RUNNING: ';
              else
                return 'NEXT RUN: ';
            ]]]
          show_label: true
          show_icon: false
          tap_action:
            action: >
              [[[
                if (states['binary_sensor.irrigation_cycle_start_clash'].state == 'on')
                  return 'call-service';
                else return 'none';
              ]]]
            service: browser_mod.popup
            service_data:
              title: "\U00002757  CYCLE SCHEDULE CLASH"
              card:
                type: markdown
                content: |
                  <font face="Roboto">

                  #### WARNING! You have overlapping cycle schedules...

                  {{ state_attr('binary_sensor.irrigation_cycle_start_clash', 'clash_text') }}

                  Please check and correct.

                  </font>
              deviceID:
                - this
              style:
                font-size: 14px
                border-radius: 10px
                box-shadow: 0px 0px 8px 2px
                opacity: 0.9
                "--primary-text-color": "#FFFFFF"
                "--paper-dialog-background-color": "#343433"  # Popup header
                "--paper-card-background-color": "#343433"  # Card background
                "--secondary-background-color": "#525251"

          styles:
            grid:
              - grid-template-areas: '"l n clash_icon warning"'
              - grid-template-columns: min-content min-content auto 1fr  
              - grid-template-rows: 1fr
            card:
              - font-family: Oswald
              - background: none
              - padding: 5px
              - height: 35px
            name:
              - color: >
                  [[[
                    if (states['input_boolean.irrigation_master_control_switch'].state == 'off')
                      return 'rgb(255, 165, 0)';
                    else return 'var(--secondary-text-color)';
                  ]]]
            label:
              - color: var(--primary-text-color)
              - padding: 0em 0.5em
            custom_fields:
              clash_icon:
                - padding: 0em 0.5em
                - color: >
                    [[[
                      if (states['binary_sensor.irrigation_cycle_start_clash'].state == 'on')
                        return 'rgb(255, 165, 0)';
                      else return 'var(--primary-background-color)';
                    ]]]
              warning:
                - color: rgb(255, 165, 0)
                - justify-self: end
          custom_fields:
            clash_icon: >
              [[[
                return '<ha-icon icon="mdi:alert-rhombus-outline"></ha-icon>';
              ]]]
            warning: >
              [[[
                switch(states['input_boolean.irrigation_master_control_switch'].state) {
                  case 'off':
                    return '';
                  case 'on':
                    if (states['input_boolean.irrigation_testing_mode'].state == 'on')
                      return '(Testing Mode is On)';
                }
              ]]]

        #=== STOP BUTTON
        - type: custom:button-card
          icon: mdi:stop-circle-outline
          show_name: false
          tap_action:
            action: >
              [[[ 
                if (states['input_boolean.irrigation_cycle1_running'].state == 'on')
                  return 'call-service';
                else if (states['input_boolean.irrigation_cycle2_running'].state == 'on')
                  return 'call-service';
                else if (states['input_boolean.irrigation_cycle3_running'].state == 'on')
                  return 'call-service';
                else 
                  return 'none';
              ]]]
            service: script.irrigation_stop_irrigation
            service_data:
              cycle: >
                [[[
                  if (states['input_boolean.irrigation_cycle1_running'].state == 'on')
                    return 'cycle1';
                  else if (states['input_boolean.irrigation_cycle2_running'].state == 'on')
                    return 'cycle2';
                  else if (states['input_boolean.irrigation_cycle3_running'].state == 'on')
                    return 'cycle3';
                  else
                    return 'none';
                ]]]
              zone: >
                [[[
                  if (states['timer.irrigation_zone1_timer'].state == 'active')
                    return 'zone1';
                  else if (states['timer.irrigation_zone2_timer'].state == 'active')
                    return 'zone2';
                  else if (states['timer.irrigation_zone3_timer'].state == 'active')
                    return 'zone3';
                  else if (states['timer.irrigation_zone4_timer'].state == 'active')
                    return 'zone4';
                  else if (states['timer.irrigation_zone5_timer'].state == 'active')
                    return 'zone5';
                  else if (states['timer.irrigation_zone6_timer'].state == 'active')
                    return 'zone6';
                  else if (states['timer.irrigation_zone7_timer'].state == 'active')
                    return 'zone7';
                  else if (states['timer.irrigation_zone8_timer'].state == 'active')
                    return 'zone8';
                  else
                    return 'none';
                ]]]
          styles:
            card:
              - background: none
              - height: 35px
              - width: >
                  [[[
                    if (states['input_boolean.irrigation_cycle1_running'].state == 'on')
                      return '35px';
                    else if (states['input_boolean.irrigation_cycle2_running'].state == 'on')
                      return '35px';
                    else if (states['input_boolean.irrigation_cycle3_running'].state == 'on')
                      return '35px';
                    else return '0px';
                  ]]]
            icon:
              - color: >
                  [[[
                    if (states['input_boolean.irrigation_cycle1_running'].state == 'on')
                      return 'red';
                    else if (states['input_boolean.irrigation_cycle2_running'].state == 'on')
                      return 'red';
                    else if (states['input_boolean.irrigation_cycle3_running'].state == 'on')
                      return 'red';
                    else return 'var(--primary-background-color)';
                  ]]]
              - width: 35px

        #=== MASTER CONTROL SWITCH (When on)
        - type: custom:button-card
          entity: input_boolean.irrigation_master_control_switch
          icon: mdi:toggle-switch-off-outline
          show_name: false
          styles:
            card:
              - background: none
              - height: 35px
              - width: >
                  [[[
                    if (states['input_boolean.irrigation_master_control_switch'].state == 'off')
                      return '55px';
                    else return '0px';
                  ]]]
            icon:
              - color: var(--text-color)
              - width: 45px

  - type: entities
    entities:
      - type: divider
    style: >
      ha-card {
        background: none;
        margin-top: -1em;
      }

style: >
  ha-card {
    background: none;
    margin-top: -1em;
    margin-bottom: -1em;
  }
